function GenerateInpFromNodesAndConnectivity(x,y,z,Conn,Name)
% This function can create an .inp based on a Delaunay Triangulation. It
% can be used to transfer mold data into e.g. Abaqus.

nNodes = length(x);
nElem = size(Conn,1);

FileId = fopen([Name '.inp'], 'wt');

%% Write top part

w('*Heading');
w('** Job name: Job-1 Model name: Model-1');
w('** Generated by: MATLAB script');
w('*Preprint, echo=NO, model=NO, history=NO, contact=NO');
w('**');
w('** PARTS');
w('**');
w(['*Part, name="' Name '"']);


%% Write nodes

w('*Node');

for i = 1:nNodes
    w(['      ' num2str(i) ',   ' num2str(x(i)) ',   ' num2str(y(i)) ',   ' num2str(z(i))]);
end

%% Write element connectivity

w('*Element, type=S3');

for i = 1:nElem

    w(['    ' num2str(i) ',     '  num2str(Conn(i,1)) ',     ' num2str(Conn(i,2)) ',     ' num2str(Conn(i,3))]);

end


%% Write bottom part

w('*End Part');
w('**');  
w('**');
w('** ASSEMBLY');
w('**');
w('*Assembly, name=Assembly');
w('**');  
w(['*Instance, name="' Name '-1", part="' Name '"']);
w('*End Instance');
w('**');  
w('*End Assembly');

%% Nested write function for better readability

fclose(FileId);

    function w(str,data)

        if nargin == 1

            fprintf(FileId,[str '\n']);

        elseif nargin > 1

            fprintf(FileId,[str '\n'],data);

        end


    end

end

